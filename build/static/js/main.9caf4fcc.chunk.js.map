{"version":3,"sources":["components/HomePage.js","components/ProjectPage.js","components/LoginPage.js","components/AboutUsPage.js","components/DonatePage.js","components/MapPage.js","components/CityPage.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","state","projects","load","console","log","fetch","then","result","json","data","setState","catch","err","sampleData","handleButtonClick","render","sort_cards","event","algorithm","target","value","concat","sort","p1","p2","finance","donationGoals","donatedSoFar","onLoad","this","Container","fluid","id","style","marginRight","onChange","selected","disabled","className","map","obj","Card","Img","variant","src","imag","alt","Body","Title","title","Text","shortDescription","to","_id","React","Component","PROJECT_SCHEME","ProjectPage","props","index","recommended","project","handleSelect","selectedIndex","e","loadProject","match","params","a","loadRecommended","sampleProjects","find","tags","method","headers","body","JSON","stringify","percent","width","image","maxHeight","objectFit","textShadow","Subtitle","fontSize","ProgressBar","marginBottom","animated","striped","now","key","longDescription","Button","href","companyUrl","FacebookIcon","url","window","location","size","TwitterIcon","Carousel","activeIndex","onSelect","pj","Item","Caption","LoginPage","email","password","validateForm","length","handleSubmit","preventDefault","req","Request","undefined","localStorage","setItem","tokenData","parse","atob","split","alert","error","handleSubmitDummy","LoadingIndicator","usePromiseTracker","promiseInProgress","height","display","justifyContent","alignItems","type","color","getItem","onSubmit","FormGroup","controlId","bsSize","FormControl","autoFocus","block","AboutUsPage","ontouchstart","DonatePage","document","getElementById","visibility","currentTarget","checkValidity","stopPropagation","removeItem","Form","noValidate","validated","Row","Col","marginTop","textAlign","fontWeight","ToggleButtonGroup","name","defaultValue","ToggleButton","hideRadio","onClick","showRadio","Group","as","md","Control","placeholder","Check","required","label","feedback","API_KEY","MapPage","coords","longitude","latitude","country","postal_code","locality","sublocality","navigator","geolocation","getCurrentPosition","position","loc","Geocode","fromLatLng","response","address","results","formatted_address","i","address_components","j","types","long_name","CityPage","App","history","useHistory","logout","push","Greeting","Navbar","LogButton","paddingBottom","bg","expand","Brand","underline","Toggle","aria-controls","Collapse","Nav","marginLeft","path","component","Boolean","hostname","setApiKey","setLanguage","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9caf4fcc.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    Button,\n    Card,\n    CardDeck,\n    CardGroup,\n    Container\n} from 'react-bootstrap';\n\nimport sampleData from \"../res/projects.json\";\n\nclass HomePage extends React.Component {\n    \n    state = {\n        projects: []\n    };\n\n    load = () => {\n        console.log('homepage load!');\n        fetch('/api/projects')\n            .then((result) => result.json())\n            .then((data) => {\n                console.log(data);\n                this.setState({\n                    projects: data\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n                this.setState({projects: sampleData});\n            });\n    };\n\n    handleButtonClick = () => {\n      this.render();\n    }\n    \n    sort_cards = (event) => {\n        const algorithm = event.target.value;  // The 'value' property of the selected option\n        const projects = this.state.projects.concat();  // Make a copy\n\n        switch (algorithm)\n        {\n            case \"prog-abs\":  // The absolute difference between the goal and the currently raised funds\n                projects.sort((p1, p2) =>   // i.e. \"The amount to go\" - smallest first.\n                    (p1.finance.donationGoals - p1.finance.donatedSoFar) - (p2.finance.donationGoals - p2.finance.donatedSoFar));\n                break;\n            case \"prog-rel\":  // The percentage of the goal raised; biggest first\n                projects.sort((p1, p2) => \n                    p2.finance.donatedSoFar / p2.finance.donationGoals - p1.finance.donatedSoFar / p1.finance.donationGoals);\n                break;\n            case \"fnd-goal\":  // The fundraising goal; biggest first\n                projects.sort((p1, p2) => p2.finance.donationGoals - p1.finance.donationGoals);\n                break;\n            case \"tot-fnds\":  // The total funds raised thus far; biggest first\n                projects.sort((p1, p2) => p2.finance.donatedSoFar - p1.finance.donatedSoFar);\n            default:\n                console.log(\"Selected invalid algorithm!!\")\n                break;\n        }\n\n        this.setState({projects: projects});\n        console.log(projects);  // Validate that the projects variable is sorting\n    }\n\n    render() {\n        return (\n            <>\n                <div onLoad={this.load()}>\n                    <Container fluid={true} >\n                        <div>\n                            <select id=\"sort_alg_selecter\" style={{marginRight: \"2em\"}} onChange={this.sort_cards}>\n                                <option selected disabled>Select Sorting Method</option>\n                                <option value=\"prog-rel\">  Progress (% of Goal)     </option>\n                                <option value=\"prog-abs\">  Progress ($ From Goal)   </option>\n                                <option value=\"fnd-goal\">  Fundraising Goal         </option>\n                                <option value=\"tot-fnds\">  Total Funds Raised       </option>\n                                <option disabled>Project Age</option>\n                                <option disabled>Remaining Project Time</option>\n                            </select>\n                        </div>\n                        <hr/>\n                        <div className=\"row\">\n                            {this.state.projects.map(obj => {\n                                return (\n                                    <div className=\"col-sm-6 col-md-4 col-lg-3 col-xl-2 pb-2\">\n                                        <Card className=\"border-info\">\n                                            <Card.Img variant=\"top\" src={obj.imag} alt=\"Generic placeholder in case pic fails to load\" />\n                                            <Card.Body>\n                                                <Card.Title>{obj.title}</Card.Title>\n                                                <Card.Text>\n                                                    {obj.shortDescription}\n                                                </Card.Text>\n                                                {/* <!--  click={() => navToPage(obj._id)} --> */}\n                                                {/* <Button variant=\"primary\" to={'/projects/'+obj._id}>Go somewhere</Button> */}\n                                                <Link to={'/project/' + obj._id} className=\"button\">Project Page</Link>\n                                            </Card.Body>\n                                        </Card>\n                                    </div>\n    \n                                );\n    \n                            })}\n    \n                        </div>\n    \n                    </Container>\n                </div>\n            </>\n            );\n        }\n    }\n\nexport default HomePage;","import React from 'react';\nimport { Card, Button, Container } from 'react-bootstrap';\nimport { useParams } from 'react-router';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport Image from 'react-bootstrap/Image'\nimport Carousel from 'react-bootstrap/Carousel';\nimport { Link } from 'react-router-dom';\nimport {\n    FacebookIcon,\n    TwitterIcon\n} from \"react-share\";\n\nimport sampleProjects from \"../res/projects.json\";\nconst PROJECT_SCHEME = {\n    \"_id\": \"\",\n    \"title\": \"\",\n    \"shortDescription\": \"\",\n    \"longDescription\": \"\",\n    \"image\": \"\",\n    \"companyName\": \"\",\n    \"companyUrl\": \"\",\n    \"finance\": {\n        \"donatedSoFar\": \"\",\n        \"donationGoals\": \"\"\n    },\n    \"tags\": []\n};\n\nclass ProjectPage extends React.Component {\n    \n\n    state = {\n        index: 0,\n        recommended: [],\n        project: PROJECT_SCHEME\n    }\n\n\n    constructor(props) {\n        super(props);\n        console.log(props);\n    }\n\n    handleSelect = (selectedIndex, e) => {\n        this.setState({ index: selectedIndex });\n    };\n\n    loadProject = () => {\n        const id = this.props.match.params.id;\n\n        // API pulls the projectto display\n        fetch(`/api/project/${id}`)\n            .then(async (result) => {\n                const data = await result.json();\n                this.setState({\n                    project: data\n                });\n                this.loadRecommended(data['tags']);\n            })\n            .catch((err)=>{\n                this.setState({project: sampleProjects.find((e) => e._id === id)});\n            });\n    };\n\n    loadRecommended = (tags) => {\n        console.log('load recommended');\n        fetch('/api/projects/recommended', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                tags: tags\n            })\n        }).then(async (result) => {\n            const data = await result.json();\n            this.setState({\n                recommended: data\n            });\n        }).catch(console.log);\n    }\n\n    load = () => {\n        this.loadProject();\n    }\n\n    render = () => {\n        const percent = 100 * this.state.project.finance.donatedSoFar / this.state.project.finance.donationGoals;\n        return (\n            <>\n\n                <div className=\"text-center p-5\" id=\"wrapper\" onLoad={this.load}>\n                    <Card style={{ width: '100%' }}>\n                        <Card.Img variant=\"top\" src={this.state.project.image} alt=\"Generic placeholder in case pic fails to load\" style={{ maxHeight: '500px', objectFit: 'cover' }} />\n\n                        <Card.Body>\n\n                            <Card.Title id=\"title\" style={{\n                                textShadow: '0px 1px 3px #454545',\n                                textShadow: '0px 3px 7px #454545',\n                                textShadow: '0px 5px 10px #e0e0e0',\n                                fontSize: '3em'\n                            }} >{this.state.project.title} </Card.Title>\n\n                            <Card.Subtitle style={{\n                                fontSize: '1.2em',\n                                textShadow: '0px 1px 3px #454545',\n                                textShadow: '0px 3px 7px #454545',\n                                textShadow: '0px 5px 10px #e0e0e0',\n                                marginBottom: 45\n                            }}>\n                                {this.state.project.shortDescription}\n                            </Card.Subtitle>\n\n                            <div className=\"container\">\n                                <ProgressBar style={{ marginBottom: 25 }}>\n                                    <ProgressBar animated striped variant=\"success\" now={percent} key={1} />\n\n                                </ProgressBar>\n                                <Link to=\"/donate\" variant=\"outline-success\" className=\"button m-1\" >Donate</Link>\n                            </div>\n\n                            <p></p>\n                            <p></p>\n                            <Card.Text>\n                                {this.state.project.longDescription}\n                            </Card.Text>\n\n                            <p ></p>\n                            <Button href={this.state.project.companyUrl} target=\"_blank\" className=\"m-3\" variant=\"outline-dark\"> Company Website </Button>\n                            {/* NOTE TO NOAH, UNCOMMENT AND TEST THE CODE BELOW*/}\n                            <FacebookIcon url={window.location.href} size={32} />\n                            <TwitterIcon size={32} />\n\n                            <div></div>\n\n                        </Card.Body>\n\n                    </Card>\n\n                    <Container>\n\n                        <Carousel activeIndex={this.state.index} onSelect={this.handleSelect}>\n                            {this.state.recommended.map(pj => (\n                                <Carousel.Item>\n                                    <img\n                                        className=\"d-block w-100\"\n                                        src={pj.image}\n                                        alt=\"First slide\"\n                                    />\n                                    <Carousel.Caption>\n                                        <h3>{pj.title}</h3>\n                                        <p>{pj.shortDescription}</p>\n                                    </Carousel.Caption>\n                                </Carousel.Item>\n                            ))}\n                        </Carousel>\n\n                    </Container>\n\n                </div>\n\n            </>\n        );\n    }\n\n}\n\nexport default ProjectPage;\n","import React, { useState, Component} from \"react\";\nimport  { Redirect } from 'react-router-dom';\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport \"./styles/Login.css\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport { trackPromise } from 'react-promise-tracker';\nimport Loader from 'react-loader-spinner';\n\nclass LoginPage extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  }\n\n  validateForm = () => {\n    return this.state.length > 0 && this.state.password.length > 0;\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const req = new Request('/api/auth');\n    req.json({\n      email: this.state.email,\n      password: this.state.password\n    });\n    fetch('/api/auth', req)\n      .then(async (result) => {\n        const data = await result.json();\n        if (data['token'] != undefined) {\n          localStorage.setItem('token', data['token']);\n          const tokenData = JSON.parse(atob(data['token'].split('.')[1]));\n\n          localStorage.setItem('_id', tokenData['_id']);\n          localStorage.setItem('name', tokenData['name']);\n          localStorage.setItem('email', tokenData['email']);\n        } else {\n          alert('Login failed!')\n        }\n      })\n      .catch((error) => {\n        alert('Login failed!');\n      });\n  }\n\n  handleSubmitDummy = (event) => {\n    console.log('DEBUG: Using dummy tokens...');\n          \n    localStorage.setItem('_id', \"DUMMY_ID12345\");\n    localStorage.setItem('name', \"John Doe\");\n    localStorage.setItem('email', \"john@doe.nut\");\n  }\n\n  LoadingIndicator = (props) => {\n    const { promiseInProgress } = usePromiseTracker();\n\n    return promiseInProgress &&\n      (\n        <>\n          <h1>Hey some async call in progress ! </h1>\n          <div\n            style={{\n              width: \"100%\",\n              height: \"100\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}>\n\n            <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\n          </div>\n        </>\n      );\n  }\n\n  render()\n  {\n    if (localStorage.getItem('name'))\n      return <Redirect to=\"/\"/>\n    else\n      return (\n        <div className=\"Login\">\n          <form onSubmit={this.handleSubmitDummy}>\n            <FormGroup controlId=\"email\" bsSize=\"large\">\n              <label>Email</label>\n              <FormControl\n                autoFocus\n                type=\"email\"\n                value={this.state.email}\n                onChange={e => this.setState({email: e.target.value})}\n              />\n            </FormGroup>\n            <FormGroup controlId=\"password\" bsSize=\"large\">\n              <label>Password</label>\n              <FormControl\n                value={this.state.password}\n                onChange={e => this.setState({password: e.target.value})}\n                type=\"password\"\n              />\n            </FormGroup>\n            <Button block bsSize=\"large\" disabled={!this.validateForm} type=\"submit\">\n              Login\n            </Button>\n          </form>\n        </div>\n      );\n  }\n}\n\nexport default LoginPage;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./styles/aboutus.css\";\n\nclass AboutUsPage extends React.Component {\n  render() {\n    return (\n      <div>\n        <section id=\"team\" className=\"pb-5\">\n          <div className=\"container\">\n            <h5 className=\"section-title h1\">MEET OUR TEAM</h5>\n            <div className=\"row\">\n              {/* Team member 1*/}\n              <div className=\"col-sm-6\">\n                <div className=\"image-flip\">\n                  <div className=\"mainflip flip-0\">\n                    <div className=\"frontside\">\n                      <div className=\"card\">\n                        <div className=\"card-body text-center\">\n                          <p><img className=\"img-fluid\" src=\"images/headshots/devam.jpg\" alt=\"card image\" /></p>\n                          <h4 className=\"card-title\">Devam Sisodraker</h4>\n                          <p className=\"card-text\">I’m Devam, a second year Math & Computer Science student at UBC with a passion for software engineering.</p>\n                          <a href=\"https://devam.io\" className=\"btn btn-primary btn-sm\"><i className=\"fa fa-plus\" /></a>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"backside\">\n                      <div className=\"card\">\n                        <div className=\"card-body text-center mt-4\">\n                          <h4 className=\"card-title\">About Me</h4>\n                          <p className=\"card-text\">Ever since I was a toddler, I have been passionate about technology. I want to make the world as passionate about technology as I am by showing people how to use it to solve problems.</p>\n                          <ul className=\"list-inline\">\n                            <li className=\"list-inline-item\">\n                              <a className=\"social-icon text-xs-center\" target=\"_blank\" href=\"https://www.linkedin.com/in/d3vel0per/\">\n                                <i className=\"fa fa-linkedin\" />\n                              </a>\n                            </li>\n                            <li className=\"list-inline-item\">\n                              <a className=\"social-icon text-xs-center\" target=\"_blank\" href=\"https://devam.io\">\n                                <i className=\"fa fa-external-link\" />\n                              </a>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* ./Team member */}\n              {/* Team member 2 */}\n              <div className=\"col-sm-6\">\n                <div className=\"image-flip\" ontouchstart=\"this.classList.toggle('hover');\">\n                  <div className=\"mainflip\">\n                    <div className=\"frontside\">\n                      <div className=\"card\">\n                        <div className=\"card-body text-center\">\n                          <p><img className=\" img-fluid\" src=\"images/headshots/vishal.jpg\" alt=\"card image\" /></p>\n                          <h4 className=\"card-title\">Vishal Desh</h4>\n                          <p className=\"card-text\">Hi, I am Vishal Desh currently pursuing Computer Science at UBC.</p>\n                          <a href=\"http://vishaldesh.com/\" className=\"btn btn-primary btn-sm\"><i className=\"fa fa-plus\" /></a>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"backside\">\n                      <div className=\"card\">\n                        <div className=\"card-body text-center mt-4\">\n                          <h4 className=\"card-title\">About Me</h4>\n                          <p className=\"card-text\">I am passionate about robotics and software development to create a positive impact in the world. I aspire to start my own robotics company. </p>\n                          <ul className=\"list-inline\">\n                            <li className=\"list-inline-item\">\n                              <a className=\"social-icon text-xs-center\" target=\"_blank\" href=\"mailto: emailtovishy@gmail.com\">\n                                <i className=\"fa fa-google\" />\n                              </a>\n                            </li>\n                            <li className=\"list-inline-item\">\n                              <a className=\"social-icon text-xs-center\" target=\"_blank\" href=\"http://vishaldesh.com/\">\n                                <i className=\"fa fa-external-link\" />\n                              </a>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Team 3 */}\n              <div className=\"col-sm-6\">\n                <div className=\"image-flip\" ontouchstart=\"this.classList.toggle('hover');\">\n                  <div className=\"mainflip\">\n                    <div className=\"frontside\">\n                      <div className=\"card\">\n                        <div className=\"card-body text-center\">\n                          <p><img className=\" img-fluid\" src=\"images/headshots/noah.jpg\" alt=\"card image\" /></p>\n                          <h4 className=\"card-title\">Noah Caleanu</h4>\n                          <p className=\"card-text\">UBC Electrical Engineer 2020</p>\n                          <a href=\"https://www.fiverr.com/share/qb8D02\" className=\"btn btn-primary btn-sm\"><i className=\"fa fa-plus\" /></a>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"backside\">\n                      <div className=\"card\">\n                        <div className=\"card-body text-center mt-4\">\n                          <h4 className=\"card-title\">About Me</h4>\n                          <p className=\"card-text\">Interest in sustainable technology and interplanetery travel. I enjoyed this hackathon, I learned Javascript and React.</p>\n                          <ul className=\"list-inline\">\n                            <li className=\"list-inline-item\">\n                              <a className=\"social-icon text-xs-center\" target=\"_blank\" href=\"https://www.linkedin.com/in/noah-caleanu-871662135/\">\n                                <i className=\"fa fa-linkedin\" />\n                              </a>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* ./Team member */}\n              {/* Team member  */}\n              <div className=\"col-sm-6\">\n                <div className=\"image-flip\" ontouchstart=\"this.classList.toggle('hover');\">\n                  <div className=\"mainflip\">\n                    <div className=\"frontside\">\n                      <div className=\"card\">\n                        <div className=\"card-body text-center\">\n                          <p><img className=\"img-fluid\" src=\"images/headshots/thomas.jpg\" alt=\"card image\" /></p>\n                          <h4 className=\"card-title\">Thomas Richmond</h4>\n                          <p className=\"card-text\">Mechanical Engineering Student at UBC</p>\n                          <a href=\"https://www.fiverr.com/share/qb8D02\" className=\"btn btn-primary btn-sm\"><i className=\"fa fa-plus\" /></a>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"backside\">\n                      <div className=\"card\">\n                        <div className=\"card-body text-center mt-4\">\n                          <h4 className=\"card-title\">About Me</h4>\n                          <p className=\"card-text\">Thomas Richmond is an enthusiastic mechanical engineering student with a passion for innovative and sustainable mechatronic and space exploration technologies. <br/><br/> Beyond the workplace, Thomas is an avid outdoor enthusiast, longboarder, musician (piano and guitar) and electronics hobbyist.</p>\n                          <ul className=\"list-inline\">\n                            <li className=\"list-inline-item\">\n                              <a className=\"social-icon text-xs-center\" target=\"_blank\" href=\"https://www.linkedin.com/in/richmond-thomas/\">\n                                <i className=\"fa fa-linkedin\" />\n                              </a>\n                            </li>\n                            <li className=\"list-inline-item\">\n                              <a className=\"social-icon text-xs-center\" target=\"_blank\" href=\"mailto: thomas.joakim@gmail.com\">\n                                <i className=\"fa fa-google\" />\n                              </a>\n                            </li>\n                            <li className=\"list-inline-item\">\n                              <a className=\"social-icon text-xs-center\" target=\"_blank\" href=\"http://www.embeddedsystems.ca/\">\n                                <i className=\"fa fa-external-link\" />\n                              </a>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n      </div>\n    );\n  }\n\n}\n\nexport default AboutUsPage;\n\n\n\n","import React from 'react';\nimport {\n    Button,\n    Row,\n    Container,\n    Col,\n    InputGroup,\n    FormControl,\n    ToggleButtonGroup,\n    ToggleButton,\n    Form\n} from 'react-bootstrap';\nimport {\n    Redirect\n} from 'react-router';\n\n\nclass DonatePage extends React.Component {\n\n    hideRadio (event) {\n        document.getElementById(\"amount\").style.visibility = \"hidden\";\n    }\n\n    showRadio (event) {\n        document.getElementById(\"amount\").style.visibility = \"visible\";\n    }\n\n    handleSubmit (event) {\n      const form = event.currentTarget;\n      \n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      else {\n        alert(\"Thank you for donating!\");\n      }\n      localStorage.setItem(\"donation-posted\", true);\n    }\n\n    /* code snippet to authenticate user on page. \n    If not logged in returns Null, None, or empty or something*/\n\n    /* localStorage.getItem('token) =*/ \n    // var user_state = localStorage.getItem('token');\n    \n    render() {\n        if (localStorage.getItem('donation-posted'))\n        {\n            localStorage.removeItem('donation-posted');\n            return <Redirect to=\"/\"/>\n        }\n        else\n            return (\n                <>\n                <Form noValidate validated={localStorage.getItem('donation-posted')} onSubmit={this.handleSubmit}>\n                    <Container>\n                            <Form.Row>\n                                <Col style={{\n                                    marginTop: '20%',\n                                    marginBottom: '5%',\n                                    textAlign: 'center'\n                                }}\n                                ><h2 style={{\n                            \n                                    color: '#141114',\n                                    fontWeight: 'bold',\n                                    fontSize: '4em',\n                                    textShadow: '4px 4px 5px gray'   \n                                }}>Donate Now</h2>\n                                </Col>\n                            </Form.Row>\n\n                            <p></p>\n                    \n                    <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\n                        <ToggleButton variant=\"outline-dark\" id =\"1\" value={1} onChange={this.hideRadio} >$5</ToggleButton>\n                        <ToggleButton variant=\"outline-dark\" id =\"2\" value={2} onChange={this.hideRadio} >$10</ToggleButton>\n                        <ToggleButton variant=\"outline-dark\" id =\"3\" value={3} onChange={this.hideRadio} >$20</ToggleButton>\n                        <ToggleButton variant=\"outline-dark\" id =\"4\" value={4} onChange={this.hideRadio} >$50</ToggleButton>\n                        <ToggleButton variant=\"outline-dark\" id =\"5\" value={5} onChange={this.hideRadio}>$100</ToggleButton>\n                        <ToggleButton variant=\"outline-dark\" id =\"6\" value={6} onClick={this.showRadio}>Other</ToggleButton>\n                    </ToggleButtonGroup>\n                \n                    <Form.Row>\n                            <Form.Group as={Col} md=\"12\" controlId=\"validationCustom03\" \n                                                        style= {{marginBottom: 30 }} >\n                            \n                                <Form.Control \n                                            id = \"amount\"\n                                            style={{marginBottom: '5%',\n                                                marginTop: '5%',\n                                                        visibility: 'hidden'}} \n                                            type=\"number\" placeholder=\"CAD $\"  />\n                                \n                            </Form.Group>\n                    </Form.Row>\n                    <Form.Group>\n                            <Form.Check\n                                required\n                                label=\"Agree to Terms of Use\"\n                                feedback=\"You must agree before submitting.\"\n                                />\n                    </Form.Group>\n\n                        <Button variant=\"success\" size=\"lg\" type=\"number submit\"> Donate </Button>\n                    \n                    </Container>\n                </Form>\n\n                \n                </>\n            );\n    }\n}\n\nexport default DonatePage;","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport Geocode from \"react-geocode\";\n\nconst API_KEY = 'AIzaSyAixXVA1zMyB8fb4O_PY5oZQw3N_ONAetQ'\n// u big P bro ;P\n// I know im big P boi\n\nclass MapPage extends React.Component {\n\n  state = {\n    coords: {\n      longitude: 0,\n      latitude: 0,\n    },\n    location: {\n      country: \"\",\n      postal_code: \"\",\n      locality: \"\",\n      sublocality: \"\"\n    }\n  };\n\n  load = () => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n\n      const loc = {  // Temp Variable\n        country: \"\",\n        postal_code: \"\",\n        locality: \"\",\n        sublocality: \"\"\n      };\n\n      // Get address from latitude & longitude.\n      Geocode.fromLatLng(`${this.state.coords.latitude}`, `${this.state.coords.longitude}`, API_KEY)\n        .then((response) => {\n          const address = response.results[0].formatted_address;\n          console.log(address);\n\n          for (let i = 0; i < response.results[0].address_components.length; ++i) {\n            for (let j = 0; j < response.results[0].address_components[i].types.length; ++j) {\n              if (response.results[0].address_components[i].types[j] == \"country\")\n                loc.country = response.results[0].address_components[i].long_name;\n              else if (response.results[0].address_components[i].types[j] == \"postal_code\")\n                loc.postal_code = response.results[0].address_components[i].long_name;\n              else if (response.results[0].address_components[i].types[j] == \"locality\")\n                loc.locality = response.results[0].address_components[i].long_name;\n              else if (response.results[0].address_components[i].types[j] == \"sublocality\")\n                loc.sublocality = response.results[0].address_components[i].long_name;\n            }\n          }\n\n          this.setState({\n            coords: position.coords,\n            location: loc\n          });\n        }).catch(error => {\n          console.error(error);\n        });\n\n\n    });\n\n\n\n\n  }\n\n  // set response language. Defaults to english.\n  render() {\n    return (\n      <div onLoad={this.load}>\n        <h4>Using geolocation JavaScript API in React</h4>\n        <p>Longitude: {this.state.coords.longitude}</p>\n        <p>Latitude:  {this.state.coords.latitude} </p>\n        <p>Country:   {this.state.location.country} </p>\n        <p>loaclity:  {this.state.location.locality} </p>\n      </div>\n    );\n  }\n}\n\nexport default MapPage;\n","import React from 'react';\n// import { WebServiceClient } from '@maxmind/geoip2-node';\n\n\nfunction CityPage() {\n\n\n    // const WebServiceClient = require('@maxmind/geoip2-node').WebServiceClient;\n    // // Typescript:\n\n\n    // const client = new WebServiceClient('1234', 'AGjQdO7dISjQwz4t');\n\n    // client.insights('142.1.1.1').then(response => {\n    //     console.log(response.country.isoCode); // 'CA'\n    //     console.log(response.postal.code); // 'M5S'\n    //     console.log(response.traits.userType); // 'school'\n    // });\n\n    return (\n        <></>\n    )\n\n}\n\nexport default CityPage;","// import dependenies\nimport React from 'react';\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Link,\n    useHistory\n} from 'react-router-dom';\n\n// import components\nimport HomePage     from './components/HomePage';\nimport ProjectPage  from './components/ProjectPage';\nimport LoginPage    from './components/LoginPage';\nimport AboutUsPage  from './components/AboutUsPage';\nimport DonatePage   from './components/DonatePage';\nimport MapPage      from './components/MapPage';\nimport CityPage from './components/CityPage';\n\n// import bootstrap elements\nimport {\n    Navbar, Nav, NavItem, Button, Form\n} from 'react-bootstrap';\n\n// import css\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './navbar.css'\nimport './components/styles/App.css';\n\nfunction App() {\n    const history = useHistory();\n\n    const logout = () => {\n        localStorage.removeItem('_id');\n        localStorage.removeItem('name');\n        localStorage.removeItem('email');\n    \n        history.push(\"/\");\n    };\n\n\n    // Selectively render a greeting if 'name' is defined using an IIFE\n    const Greeting = (props) => {\n        const name = localStorage.getItem('name');\n        return !!name && (\n            <Navbar.Text style={{color: \"#ffffff\", marginRight: \"1em\"}}>\n                Hello, {name}! \n            </Navbar.Text>\n        );\n    }\n\n    // Ternary expression conditionally renders a\n    // logout button if there is a 'name' token in\n    // localstorage; else it renders a login button.\n    // Implemented using an IIFE\n    const LogButton = (props) => {\n        const name = localStorage.getItem('name');\n        \n        if (name)\n            return (\n                <Button variant='outline-danger' type=\"submit\" onClick={logout}>\n                    Logout\n                </Button>);\n        else\n            return (\n                <Link to=\"/login\">\n                    <Button variant='outline-success'>\n                        Login\n                    </Button>\n                </Link>);\n    };\n\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <div style={{ paddingBottom: '10px' }}>\n                    <Navbar bg=\"dark\" expand=\"lg\">\n                        <Navbar.Brand href=\"#home\">\n                            <Link to=\"/\" style={{ color: 'white', underline: 'none' }}>CoviDonate</Link>\n                        </Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav style={{marginLeft: \"2em\"}}>\n                                {/* <Link to=\"/map\" style={{marginRight: \"1em\"}}>\n                                    <Button variant='outline-light'>\n                                        Map\n                                    </Button>\n                                </Link> */}\n                                <Link to=\"/about-us\">\n                                    <Button variant='outline-light'>\n                                        About Us\n                                    </Button>\n                                </Link>\n                            </Nav>\n\n                            <Nav className='ml-auto'>\n                                <Greeting/>\n                                <Form>\n                                    <LogButton/>\n                                </Form>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                </div>\n\n                <Switch>\n                    <Route path=\"/project/:id\" component={ProjectPage}></Route>\n                    <Route path=\"/about-us\" component={AboutUsPage}></Route>\n                    <Route path=\"/donate\" component={DonatePage}></Route>\n                    <Route path=\"/map\" component={MapPage}></Route>\n                    <Route path=\"/city\" component={CityPage}></Route>\n                    <Route path=\"/login\" component={LoginPage}></Route>\n                    <Route path=\"/\" component={HomePage}></Route>\n                </Switch>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyD3wcZvoR5pytYB-LNnPb0XhBO_CMi0wBE\");\nGeocode.setLanguage(\"en\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}