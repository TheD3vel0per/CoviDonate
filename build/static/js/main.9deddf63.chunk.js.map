{"version":3,"sources":["components/HomePage.js","components/ProjectPage.js","components/LoginPage.js","components/AboutUsPage.js","components/DonatePage.js","components/MapPage.js","components/CityPage.js","components/PrivacyPolicy.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","state","projects","load","console","log","fetch","then","result","json","data","setState","catch","err","sampleData","handleButtonClick","render","sort_cards","event","algorithm","target","value","concat","sort","p1","p2","finance","donationGoals","donatedSoFar","this","Container","fluid","id","style","marginRight","onChange","selected","disabled","className","map","obj","Card","Img","variant","src","image","alt","Body","Title","title","Text","shortDescription","to","_id","React","Component","PROJECT_SCHEME","ProjectPage","props","index","recommended","project","handleSelect","selectedIndex","e","loadProject","match","params","a","loadRecommended","sampleProjects","find","tags","method","headers","body","JSON","stringify","componentDidMount","percent","onLoad","width","maxHeight","objectFit","textShadow","Subtitle","fontSize","ProgressBar","marginBottom","animated","striped","now","key","longDescription","Button","href","companyUrl","FacebookIcon","url","window","location","size","TwitterIcon","Carousel","activeIndex","onSelect","pj","Item","Caption","LoginPage","email","password","validateForm","length","handleSubmit","preventDefault","req","Request","undefined","localStorage","setItem","tokenData","parse","atob","split","alert","error","handleSubmitDummy","LoadingIndicator","usePromiseTracker","promiseInProgress","height","display","justifyContent","alignItems","type","color","getItem","onSubmit","FormGroup","controlId","bsSize","FormControl","autoFocus","block","AboutUsPage","ontouchstart","DonatePage","document","getElementById","visibility","currentTarget","checkValidity","stopPropagation","removeItem","Form","noValidate","validated","Row","Col","marginTop","textAlign","fontWeight","ToggleButtonGroup","name","defaultValue","ToggleButton","hideRadio","onClick","showRadio","Group","as","md","Control","placeholder","Check","required","label","feedback","API_KEY","MapPage","coords","longitude","latitude","country","postal_code","locality","sublocality","navigator","geolocation","getCurrentPosition","position","loc","Geocode","fromLatLng","response","address","results","formatted_address","i","address_components","j","types","long_name","CityPage","PrivacyPolicy","App","history","useHistory","logout","push","Greeting","Navbar","LogButton","paddingBottom","bg","expand","Brand","underline","Toggle","aria-controls","Collapse","Nav","marginLeft","path","component","Boolean","hostname","setApiKey","setLanguage","ReactDOM","StrictMode","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9deddf63.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    Button,\n    Card,\n    CardDeck,\n    CardGroup,\n    Container\n} from 'react-bootstrap';\n\nimport sampleData from \"../res/projects.json\";\n\nclass HomePage extends React.Component {\n    \n    state = {\n        projects: []\n    };\n\n    load = () => {\n        console.log('homepage load!');\n        fetch('/api/projects')\n            .then((result) => result.json())\n            .then((data) => {\n                console.log(data);\n                this.setState({\n                    projects: data\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n                this.setState({projects: sampleData});\n            });\n    };\n\n    handleButtonClick = () => {\n      this.render();\n    }\n    \n    sort_cards = (event) => {\n        const algorithm = event.target.value;  // The 'value' property of the selected option\n        const projects = this.state.projects.concat();  // Make a copy\n\n        switch (algorithm)\n        {\n            case \"prog-abs\":  // The absolute difference between the goal and the currently raised funds\n                projects.sort((p1, p2) =>   // i.e. \"The amount to go\" - smallest first.\n                    (p1.finance.donationGoals - p1.finance.donatedSoFar) - (p2.finance.donationGoals - p2.finance.donatedSoFar));\n                break;\n            case \"prog-rel\":  // The percentage of the goal raised; biggest first\n                projects.sort((p1, p2) => \n                    p2.finance.donatedSoFar / p2.finance.donationGoals - p1.finance.donatedSoFar / p1.finance.donationGoals);\n                break;\n            case \"fnd-goal\":  // The fundraising goal; biggest first\n                projects.sort((p1, p2) => p2.finance.donationGoals - p1.finance.donationGoals);\n                break;\n            case \"tot-fnds\":  // The total funds raised thus far; biggest first\n                projects.sort((p1, p2) => p2.finance.donatedSoFar - p1.finance.donatedSoFar);\n            default:\n                console.log(\"Selected invalid algorithm!!\")\n                break;\n        }\n\n        this.setState({projects: projects});\n        console.log(projects);  // Validate that the projects variable is sorting\n    }\n\n    componentDidMount() {\n        this.load();\n    }\n\n    render() {\n        return (\n            <>\n                <div>\n                    <Container fluid={true} >\n                        <div>\n                            <select id=\"sort_alg_selecter\" style={{marginRight: \"2em\"}} onChange={this.sort_cards}>\n                                <option selected disabled>Select Sorting Method</option>\n                                <option value=\"prog-rel\">  Progress (% of Goal)     </option>\n                                <option value=\"prog-abs\">  Progress ($ From Goal)   </option>\n                                <option value=\"fnd-goal\">  Fundraising Goal         </option>\n                                <option value=\"tot-fnds\">  Total Funds Raised       </option>\n                                <option disabled>Project Age</option>\n                                <option disabled>Remaining Project Time</option>\n                            </select>\n                        </div>\n                        <hr/>\n                        <div className=\"row\">\n                            {this.state.projects.map(obj => {\n                                return (\n                                    <div className=\"col-sm-6 col-md-4 col-lg-3 col-xl-2 pb-2\">\n                                        <Card className=\"border-info\">\n                                            <Card.Img variant=\"top\" src={obj.image} alt=\"Generic placeholder in case pic fails to load\" />\n                                            <Card.Body>\n                                                <Card.Title>{obj.title}</Card.Title>\n                                                <Card.Text>\n                                                    {obj.shortDescription}\n                                                </Card.Text>\n                                                {/* <!--  click={() => navToPage(obj._id)} --> */}\n                                                {/* <Button variant=\"primary\" to={'/projects/'+obj._id}>Go somewhere</Button> */}\n                                                <Link to={'/project/' + obj._id} className=\"button\">Project Page</Link>\n                                            </Card.Body>\n                                        </Card>\n                                    </div>\n    \n                                );\n    \n                            })}\n    \n                        </div>\n    \n                    </Container>\n                </div>\n            </>\n            );\n        }\n    }\n\nexport default HomePage;","import React from 'react';\nimport { Card, Button, Container } from 'react-bootstrap';\nimport { useParams } from 'react-router';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport Image from 'react-bootstrap/Image'\nimport Carousel from 'react-bootstrap/Carousel';\nimport { Link } from 'react-router-dom';\nimport {\n    FacebookIcon,\n    TwitterIcon\n} from \"react-share\";\n\nimport sampleProjects from \"../res/projects.json\";\nconst PROJECT_SCHEME = {\n    \"_id\": \"\",\n    \"title\": \"\",\n    \"shortDescription\": \"\",\n    \"longDescription\": \"\",\n    \"image\": \"\",\n    \"companyName\": \"\",\n    \"companyUrl\": \"\",\n    \"finance\": {\n        \"donatedSoFar\": \"\",\n        \"donationGoals\": \"\"\n    },\n    \"tags\": []\n};\n\nclass ProjectPage extends React.Component {\n    \n\n    state = {\n        index: 0,\n        recommended: [],\n        project: PROJECT_SCHEME\n    }\n\n\n    constructor(props) {\n        super(props);\n        console.log(props);\n    }\n\n    handleSelect = (selectedIndex, e) => {\n        this.setState({ index: selectedIndex });\n    };\n\n    loadProject = () => {\n        const id = this.props.match.params.id;\n\n        // API pulls the projectto display\n        fetch(`/api/project/${id}`)\n            .then(async (result) => {\n                const data = await result.json();\n                this.setState({\n                    project: data\n                });\n                this.loadRecommended(data['tags']);\n            })\n            .catch((err)=>{\n                this.setState({project: sampleProjects.find((e) => e._id === id)});\n            });\n    };\n\n    loadRecommended = (tags) => {\n        console.log('load recommended');\n        fetch('/api/projects/recommended', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                tags: tags\n            })\n        }).then(async (result) => {\n            const data = await result.json();\n            this.setState({\n                recommended: data\n            });\n        }).catch(console.log);\n    }\n\n    load = () => {\n        this.loadProject();\n    }\n\n    componentDidMount = () => {\n        this.load();\n    }\n\n    render = () => {\n        const percent = 100 * this.state.project.finance.donatedSoFar / this.state.project.finance.donationGoals;\n        return (\n            <>\n\n                <div className=\"text-center p-5\" id=\"wrapper\" onLoad={this.load()}>\n                    <Card style={{ width: '100%' }}>\n                        <Card.Img variant=\"top\" src={this.state.project.image} alt=\"Generic placeholder in case pic fails to load\" style={{ maxHeight: '500px', objectFit: 'cover' }} />\n\n                        <Card.Body>\n\n                            <Card.Title id=\"title\" style={{\n                                textShadow: '0px 1px 3px #454545',\n                                textShadow: '0px 3px 7px #454545',\n                                textShadow: '0px 5px 10px #e0e0e0',\n                                fontSize: '3em'\n                            }} >{this.state.project.title} </Card.Title>\n\n                            <Card.Subtitle style={{\n                                fontSize: '1.2em',\n                                textShadow: '0px 1px 3px #454545',\n                                textShadow: '0px 3px 7px #454545',\n                                textShadow: '0px 5px 10px #e0e0e0',\n                                marginBottom: 45\n                            }}>\n                                {this.state.project.shortDescription}\n                            </Card.Subtitle>\n\n                            <div className=\"container\">\n                                <ProgressBar style={{ marginBottom: 25 }}>\n                                    <ProgressBar animated striped variant=\"success\" now={percent} key={1} />\n\n                                </ProgressBar>\n                                <Link to=\"/donate\" variant=\"outline-success\" className=\"button m-1\" >Donate</Link>\n                            </div>\n\n                            <p></p>\n                            <p></p>\n                            <Card.Text>\n                                {this.state.project.longDescription}\n                            </Card.Text>\n\n                            <p ></p>\n                            <Button href={this.state.project.companyUrl} target=\"_blank\" className=\"m-3\" variant=\"outline-dark\"> Company Website </Button>\n                            {/* NOTE TO NOAH, UNCOMMENT AND TEST THE CODE BELOW*/}\n                            <FacebookIcon url={window.location.href} size={32} />\n                            <TwitterIcon size={32} />\n\n                            <div></div>\n\n                        </Card.Body>\n\n                    </Card>\n\n                    <Container>\n\n                        <Carousel activeIndex={this.state.index} onSelect={this.handleSelect}>\n                            {this.state.recommended.map(pj => (\n                                <Carousel.Item>\n                                    <img\n                                        className=\"d-block w-100\"\n                                        src={pj.image}\n                                        alt=\"First slide\"\n                                    />\n                                    <Carousel.Caption>\n                                        <h3>{pj.title}</h3>\n                                        <p>{pj.shortDescription}</p>\n                                    </Carousel.Caption>\n                                </Carousel.Item>\n                            ))}\n                        </Carousel>\n\n                    </Container>\n\n                </div>\n\n            </>\n        );\n    }\n\n}\n\nexport default ProjectPage;\n","import React, { useState, Component} from \"react\";\nimport  { Redirect } from 'react-router-dom';\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport \"./styles/Login.css\";\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport { trackPromise } from 'react-promise-tracker';\nimport Loader from 'react-loader-spinner';\n\nclass LoginPage extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  }\n\n  validateForm = () => {\n    return this.state.length > 0 && this.state.password.length > 0;\n  }\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const req = new Request('/api/auth');\n    req.json({\n      email: this.state.email,\n      password: this.state.password\n    });\n    fetch('/api/auth', req)\n      .then(async (result) => {\n        const data = await result.json();\n        if (data['token'] != undefined) {\n          localStorage.setItem('token', data['token']);\n          const tokenData = JSON.parse(atob(data['token'].split('.')[1]));\n\n          localStorage.setItem('_id', tokenData['_id']);\n          localStorage.setItem('name', tokenData['name']);\n          localStorage.setItem('email', tokenData['email']);\n        } else {\n          alert('Login failed!')\n        }\n      })\n      .catch((error) => {\n        alert('Login failed!');\n      });\n  }\n\n  handleSubmitDummy = (event) => {\n    console.log('DEBUG: Using dummy tokens...');\n          \n    localStorage.setItem('_id', \"DUMMY_ID12345\");\n    localStorage.setItem('name', \"John Doe\");\n    localStorage.setItem('email', \"john@doe.nut\");\n  }\n\n  LoadingIndicator = (props) => {\n    const { promiseInProgress } = usePromiseTracker();\n\n    return promiseInProgress &&\n      (\n        <>\n          <h1>Hey some async call in progress ! </h1>\n          <div\n            style={{\n              width: \"100%\",\n              height: \"100\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}>\n\n            <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\n          </div>\n        </>\n      );\n  }\n\n  render()\n  {\n    if (localStorage.getItem('name'))\n      return <Redirect to=\"/\"/>\n    else\n      return (\n        <div className=\"Login\">\n          <form onSubmit={this.handleSubmitDummy}>\n            <FormGroup controlId=\"email\" bsSize=\"large\">\n              <label>Email</label>\n              <FormControl\n                autoFocus\n                type=\"email\"\n                value={this.state.email}\n                onChange={e => this.setState({email: e.target.value})}\n              />\n            </FormGroup>\n            <FormGroup controlId=\"password\" bsSize=\"large\">\n              <label>Password</label>\n              <FormControl\n                value={this.state.password}\n                onChange={e => this.setState({password: e.target.value})}\n                type=\"password\"\n              />\n            </FormGroup>\n            <Button block bsSize=\"large\" disabled={!this.validateForm} type=\"submit\">\n              Login\n            </Button>\n          </form>\n        </div>\n      );\n  }\n}\n\nexport default LoginPage;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./styles/aboutus.css\";\n\nclass AboutUsPage extends React.Component {\n  render() {\n    return (\n      <div>\n        <section id=\"team\" className=\"pb-5\">\n          <div className=\"container\">\n            <h5 className=\"section-title h1\">MEET OUR TEAM</h5>\n            <div className=\"row\">\n              {/* Team member 1*/}\n              <div className=\"col-sm-6\">\n                <div className=\"image-flip\">\n                  <div className=\"mainflip flip-0\">\n                    <div className=\"frontside\">\n                      <div className=\"card\">\n                        <div className=\"card-body text-center\">\n                          <p><img className=\"img-fluid\" src=\"images/headshots/devam.jpg\" alt=\"card image\" /></p>\n                          <h4 className=\"card-title\">Devam Sisodraker</h4>\n                          <p className=\"card-text\">I’m Devam, a second year Math & Computer Science student at UBC with a passion for software engineering.</p>\n                          <a href=\"https://devam.io\" className=\"btn btn-primary btn-sm\"><i className=\"fa fa-plus\" /></a>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"backside\">\n                      <div className=\"card\">\n                        <div className=\"card-body text-center mt-4\">\n                          <h4 className=\"card-title\">About Me</h4>\n                          <p className=\"card-text\">Ever since I was a toddler, I have been passionate about technology. I want to make the world as passionate about technology as I am by showing people how to use it to solve problems.</p>\n                          <ul className=\"list-inline\">\n                            <li className=\"list-inline-item\">\n                              <a className=\"social-icon text-xs-center\" target=\"_blank\" href=\"https://www.linkedin.com/in/d3vel0per/\">\n                                <i className=\"fa fa-linkedin\" />\n                              </a>\n                            </li>\n                            <li className=\"list-inline-item\">\n                              <a className=\"social-icon text-xs-center\" target=\"_blank\" href=\"https://devam.io\">\n                                <i className=\"fa fa-external-link\" />\n                              </a>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* ./Team member */}\n              {/* Team member 2 */}\n              <div className=\"col-sm-6\">\n                <div className=\"image-flip\" ontouchstart=\"this.classList.toggle('hover');\">\n                  <div className=\"mainflip\">\n                    <div className=\"frontside\">\n                      <div className=\"card\">\n                        <div className=\"card-body text-center\">\n                          <p><img className=\" img-fluid\" src=\"images/headshots/vishal.jpg\" alt=\"card image\" /></p>\n                          <h4 className=\"card-title\">Vishal Desh</h4>\n                          <p className=\"card-text\">Hi, I am Vishal Desh currently pursuing Computer Science at UBC.</p>\n                          <a href=\"http://vishaldesh.com/\" className=\"btn btn-primary btn-sm\"><i className=\"fa fa-plus\" /></a>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"backside\">\n                      <div className=\"card\">\n                        <div className=\"card-body text-center mt-4\">\n                          <h4 className=\"card-title\">About Me</h4>\n                          <p className=\"card-text\">I am passionate about robotics and software development to create a positive impact in the world. I aspire to start my own robotics company. </p>\n                          <ul className=\"list-inline\">\n                            <li className=\"list-inline-item\">\n                              <a className=\"social-icon text-xs-center\" target=\"_blank\" href=\"mailto: emailtovishy@gmail.com\">\n                                <i className=\"fa fa-google\" />\n                              </a>\n                            </li>\n                            <li className=\"list-inline-item\">\n                              <a className=\"social-icon text-xs-center\" target=\"_blank\" href=\"http://vishaldesh.com/\">\n                                <i className=\"fa fa-external-link\" />\n                              </a>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Team 3 */}\n              <div className=\"col-sm-6\">\n                <div className=\"image-flip\" ontouchstart=\"this.classList.toggle('hover');\">\n                  <div className=\"mainflip\">\n                    <div className=\"frontside\">\n                      <div className=\"card\">\n                        <div className=\"card-body text-center\">\n                          <p><img className=\" img-fluid\" src=\"images/headshots/noah.jpg\" alt=\"card image\" /></p>\n                          <h4 className=\"card-title\">Noah Caleanu</h4>\n                          <p className=\"card-text\">UBC Electrical Engineer 2020</p>\n                          <a href=\"https://www.fiverr.com/share/qb8D02\" className=\"btn btn-primary btn-sm\"><i className=\"fa fa-plus\" /></a>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"backside\">\n                      <div className=\"card\">\n                        <div className=\"card-body text-center mt-4\">\n                          <h4 className=\"card-title\">About Me</h4>\n                          <p className=\"card-text\">Interest in sustainable technology and interplanetery travel. I enjoyed this hackathon, I learned Javascript and React.</p>\n                          <ul className=\"list-inline\">\n                            <li className=\"list-inline-item\">\n                              <a className=\"social-icon text-xs-center\" target=\"_blank\" href=\"https://www.linkedin.com/in/noah-caleanu-871662135/\">\n                                <i className=\"fa fa-linkedin\" />\n                              </a>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* ./Team member */}\n              {/* Team member  */}\n              <div className=\"col-sm-6\">\n                <div className=\"image-flip\" ontouchstart=\"this.classList.toggle('hover');\">\n                  <div className=\"mainflip\">\n                    <div className=\"frontside\">\n                      <div className=\"card\">\n                        <div className=\"card-body text-center\">\n                          <p><img className=\"img-fluid\" src=\"images/headshots/thomas.jpg\" alt=\"card image\" /></p>\n                          <h4 className=\"card-title\">Thomas Richmond</h4>\n                          <p className=\"card-text\">Mechanical Engineering Student at UBC</p>\n                          <a href=\"https://www.fiverr.com/share/qb8D02\" className=\"btn btn-primary btn-sm\"><i className=\"fa fa-plus\" /></a>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"backside\">\n                      <div className=\"card\">\n                        <div className=\"card-body text-center mt-4\">\n                          <h4 className=\"card-title\">About Me</h4>\n                          <p className=\"card-text\">Thomas Richmond is an enthusiastic mechanical engineering student with a passion for innovative and sustainable mechatronic and space exploration technologies. <br/><br/> Beyond the workplace, Thomas is an avid outdoor enthusiast, longboarder, musician (piano and guitar) and electronics hobbyist.</p>\n                          <ul className=\"list-inline\">\n                            <li className=\"list-inline-item\">\n                              <a className=\"social-icon text-xs-center\" target=\"_blank\" href=\"https://www.linkedin.com/in/richmond-thomas/\">\n                                <i className=\"fa fa-linkedin\" />\n                              </a>\n                            </li>\n                            <li className=\"list-inline-item\">\n                              <a className=\"social-icon text-xs-center\" target=\"_blank\" href=\"mailto: thomas.joakim@gmail.com\">\n                                <i className=\"fa fa-google\" />\n                              </a>\n                            </li>\n                            <li className=\"list-inline-item\">\n                              <a className=\"social-icon text-xs-center\" target=\"_blank\" href=\"http://www.embeddedsystems.ca/\">\n                                <i className=\"fa fa-external-link\" />\n                              </a>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n      </div>\n    );\n  }\n\n}\n\nexport default AboutUsPage;\n\n\n\n","import React from 'react';\nimport {\n    Button,\n    Row,\n    Container,\n    Col,\n    InputGroup,\n    FormControl,\n    ToggleButtonGroup,\n    ToggleButton,\n    Form\n} from 'react-bootstrap';\nimport {\n    Redirect\n} from 'react-router';\n\n\nclass DonatePage extends React.Component {\n\n    hideRadio (event) {\n        document.getElementById(\"amount\").style.visibility = \"hidden\";\n    }\n\n    showRadio (event) {\n        document.getElementById(\"amount\").style.visibility = \"visible\";\n    }\n\n    handleSubmit (event) {\n      const form = event.currentTarget;\n      \n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      else {\n        alert(\"Thank you for donating!\");\n      }\n      localStorage.setItem(\"donation-posted\", true);\n    }\n\n    /* code snippet to authenticate user on page. \n    If not logged in returns Null, None, or empty or something*/\n\n    /* localStorage.getItem('token) =*/ \n    // var user_state = localStorage.getItem('token');\n    \n    render() {\n        if (localStorage.getItem('donation-posted'))\n        {\n            localStorage.removeItem('donation-posted');\n            return <Redirect to=\"/\"/>\n        }\n        else\n            return (\n                <>\n                <Form noValidate validated={localStorage.getItem('donation-posted')} onSubmit={this.handleSubmit}>\n                    <Container>\n                            <Form.Row>\n                                <Col style={{\n                                    marginTop: '20%',\n                                    marginBottom: '5%',\n                                    textAlign: 'center'\n                                }}\n                                ><h2 style={{\n                            \n                                    color: '#141114',\n                                    fontWeight: 'bold',\n                                    fontSize: '4em',\n                                    textShadow: '4px 4px 5px gray'   \n                                }}>Donate Now</h2>\n                                </Col>\n                            </Form.Row>\n\n                            <p></p>\n                    \n                    <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={1}>\n                        <ToggleButton variant=\"outline-dark\" id =\"1\" value={1} onChange={this.hideRadio} >$5</ToggleButton>\n                        <ToggleButton variant=\"outline-dark\" id =\"2\" value={2} onChange={this.hideRadio} >$10</ToggleButton>\n                        <ToggleButton variant=\"outline-dark\" id =\"3\" value={3} onChange={this.hideRadio} >$20</ToggleButton>\n                        <ToggleButton variant=\"outline-dark\" id =\"4\" value={4} onChange={this.hideRadio} >$50</ToggleButton>\n                        <ToggleButton variant=\"outline-dark\" id =\"5\" value={5} onChange={this.hideRadio}>$100</ToggleButton>\n                        <ToggleButton variant=\"outline-dark\" id =\"6\" value={6} onClick={this.showRadio}>Other</ToggleButton>\n                    </ToggleButtonGroup>\n                \n                    <Form.Row>\n                            <Form.Group as={Col} md=\"12\" controlId=\"validationCustom03\" \n                                                        style= {{marginBottom: 30 }} >\n                            \n                                <Form.Control \n                                            id = \"amount\"\n                                            style={{marginBottom: '5%',\n                                                marginTop: '5%',\n                                                        visibility: 'hidden'}} \n                                            type=\"number\" placeholder=\"CAD $\"  />\n                                \n                            </Form.Group>\n                    </Form.Row>\n                    <Form.Group>\n                            <Form.Check\n                                required\n                                label=\"Agree to Terms of Use\"\n                                feedback=\"You must agree before submitting.\"\n                                />\n                    </Form.Group>\n\n                        <Button variant=\"success\" size=\"lg\" type=\"number submit\"> Donate </Button>\n                    \n                    </Container>\n                </Form>\n\n                \n                </>\n            );\n    }\n}\n\nexport default DonatePage;","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport Geocode from \"react-geocode\";\nimport { Link } from 'react-router-dom';\nimport {\n  Button,\n  Card,\n  CardDeck,\n  CardGroup,\n  Container\n} from 'react-bootstrap';\n\nconst API_KEY = 'AIzaSyAixXVA1zMyB8fb4O_PY5oZQw3N_ONAetQ'\n// u big P bro ;P\n// I know im big P boi\n\nclass MapPage extends React.Component {\n\n  state = {\n    coords: {\n      longitude: 0,\n      latitude: 0,\n    },\n    location: {\n      country: \"\",\n      postal_code: \"\",\n      locality: \"\",\n      sublocality: \"\"\n    },\n    projects: []\n  };\n\n  loadRecommended = (tags) => {\n    console.log('load recommended');\n    fetch('/api/projects/recommended', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        tags: tags\n      })\n    }).then(async (result) => {\n      const data = await result.json();\n      this.setState({\n        projects: data\n      });\n    }).catch(console.log);\n  }\n\n  load = () => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      console.log(\"Latitude is :\", position.coords.latitude);\n      console.log(\"Longitude is :\", position.coords.longitude);\n      this.setState({\n        coords: position.coords\n      });\n\n      const loc = {  // Temp Variable\n        country: \"\",\n        postal_code: \"\",\n        locality: \"\",\n        sublocality: \"\"\n      };\n\n      // Get address from latitude & longitude.\n      Geocode.fromLatLng(`${this.state.coords.latitude}`, `${this.state.coords.longitude}`, API_KEY)\n        .then((response) => {\n          const address = response.results[0].formatted_address;\n          console.log(address);\n\n          for (let i = 0; i < response.results[0].address_components.length; ++i) {\n            for (let j = 0; j < response.results[0].address_components[i].types.length; ++j) {\n              if (response.results[0].address_components[i].types[j] == \"country\")\n                loc.country = response.results[0].address_components[i].long_name;\n              else if (response.results[0].address_components[i].types[j] == \"postal_code\")\n                loc.postal_code = response.results[0].address_components[i].long_name;\n              else if (response.results[0].address_components[i].types[j] == \"locality\")\n                loc.locality = response.results[0].address_components[i].long_name;\n              else if (response.results[0].address_components[i].types[j] == \"sublocality\")\n                loc.sublocality = response.results[0].address_components[i].long_name;\n            }\n          }\n\n          this.setState({\n            coords: position.coords,\n            location: loc\n          });\n          this.loadRecommended([loc.locality]);\n        }).catch(error => {\n          console.error(error);\n        });\n\n\n    });\n\n\n\n\n  }\n\n  // set response language. Defaults to english.\n  render() {\n    return (\n      <>\n        <div onLoad={this.load()}>\n          <h4>Using geolocation JavaScript API in React, and Reverse Geocoding in Google Cloud</h4>\n          <p>Longitude: {this.state.coords.longitude}</p>\n          <p>Latitude:  {this.state.coords.latitude} </p>\n          <p>Country:   {this.state.location.country} </p>\n          <p>Locality:  {this.state.location.locality} </p>\n          <p>See projects in your area below!</p>\n        </div>\n        <div onLoad={this.load()}>\n          <Container fluid={true} >\n            <div className=\"row\">\n              {this.state.projects.map(obj => {\n                return (\n                  <div className=\"col-sm-6 col-md-4 col-lg-3 col-xl-2 pb-2\">\n                    <Card className=\"border-info\">\n                      <Card.Img variant=\"top\" src={obj.image} alt=\"Generic placeholder in case pic fails to load\" />\n                      <Card.Body>\n                        <Card.Title>{obj.title}</Card.Title>\n                        <Card.Text>\n                          {obj.shortDescription}\n                        </Card.Text>\n                        {/* <!--  click={() => navToPage(obj._id)} --> */}\n                        {/* <Button variant=\"primary\" to={'/projects/'+obj._id}>Go somewhere</Button> */}\n                        <Link to={'/project/' + obj._id} className=\"button\">Project Page</Link>\n                      </Card.Body>\n                    </Card>\n                  </div>\n\n                );\n\n              })}\n\n            </div>\n\n          </Container>\n        </div>\n\n      </>\n    );\n  }\n}\n\nexport default MapPage;\n","import React from 'react';\n// import { WebServiceClient } from '@maxmind/geoip2-node';\n\n\nfunction CityPage() {\n\n\n    // const WebServiceClient = require('@maxmind/geoip2-node').WebServiceClient;\n    // // Typescript:\n\n\n    // const client = new WebServiceClient('1234', 'AGjQdO7dISjQwz4t');\n\n    // client.insights('142.1.1.1').then(response => {\n    //     console.log(response.country.isoCode); // 'CA'\n    //     console.log(response.postal.code); // 'M5S'\n    //     console.log(response.traits.userType); // 'school'\n    // });\n\n    return (\n        <></>\n    )\n\n}\n\nexport default CityPage;","import React from 'react';\n\nclass PrivacyPolicy extends React.Component {\n    render() {\n        return (\n            <>\n                <h1>CoviDonate Privacy Policy</h1>\n                <p>Last Updated: May 30, 2020</p>\n                <p>The CoviDonate Privacy Policy is designed to help you understand the information we collect and the different ways we may use or share it.</p>\n                <p>This policy applies to your use of CoviDonate. By “CoviDonate,” we mean the CoviDonate website, browser extension, mobile app, and any other of our products and services that directly link to this policy. To learn more about privacy at CoviDonate, please keep reading below.</p>\n                <h3>What Information We Collect</h3>\n                <p>information we collect often depends on the exact nature of our relationship with you and how you choose to use CoviDonate, which is either as a guest or registered user with an account. We have broken these descriptions down into categories to make them clearer:</p>\n                <h3>We collect account information.</h3>\n                <p>We collect information relating to your account. For example, we collect email address and password so you can create a CoviDonate account. You may be able to share other account-related information with us too if you edit your account to include fields like name or payment information to make contribution. So far, NO PAYMENT INFORMATION is collected as this is for future implementation to integrate with a financial API.</p>\n                <h3>We collect location information.</h3>\n                <p>We ask permission to access your location in order to geocode and promote projects/research in your area. This information is not distributed/available to any other parties.</p>\n                <p>We use information to protect our company and users. We use information to protect our company and users, for example to identify fraud and secure, protect accounts, and protect CoviDonate. This includes looking into potentially prohibited or illegal activity.</p>\n                <p>Our basis for processing European information. Our basis for processing your information is typically to perform a contract, including responding to your requests. Where this applies, if you choose not to provide information, we may be unable to perform the contract or respond to your request. We also process information based on consent or for our legitimate purposes.</p>\n                <p>We also use information as otherwise permitted by law.</p>\n                <h3>How We Collect Information</h3>\n                <p>Like many other companies, there are different ways that we collect information, which we’ve outlined below:</p>\n                <p>We collect information directly from you. You might provide us information in several ways. For example, we collect information when you create an account or give access to location.</p>\n                <p>When We Share Information on CoviDonate.</p>\n                <h3>Sharing with vendors.</h3>\n                <p>We currently do not give any user information out. All account related information is stored in a mongodb database.</p>\n                <p>We will share information if we think we have to in order to comply with the law or to protect ourselves. For example, we will share information to respond to a court order or subpoena or if a U.S. or non-U.S. law enforcement agency, government agency, or investigatory body requests it. We may also share information we collect when we investigate potential fraud, abuse, or other similar violations of CoviDonate rules and codes of conduct.</p>\n                <p>We may share information with any successor to all or part of our business. If all or part of our business is sold, we’re part of a merger or acquisition, or there is a financing or bankruptcy, we may share information as part of that transaction.</p>\n                <p>We may also share information for other reasons we may describe to you or as permitted under law.</p>\n                <p>Sale of information. We only use the personal information we collect to help provide, support, and improve CoviDonate as described in this policy, and we do not “sell” this information to third parties as that term is defined by applicable laws.</p>\n                <h3>Licenses</h3>\n                <p>The context of this site is held through a hackathon project on a free domain. Thus, no SSL certificate is provided. Please use discretion if/when using CoviDonate.</p>\n                <h3>Children’s Privacy</h3>\n                <p>CoviDonate is intended to be appropriate for general audiences and is not directed to children under the age of 13. We do not intentionally collect personal information from children under 13, and if we learn that we have unintentionally collected any such information, we will promptly take steps to delete it and terminate the child’s account. If you are under the age of 13, please do not use CoviDonate or share your personal information with us.</p>\n                <h3>How We Protect Information</h3>\n                <p>We maintain appropriate administrative, technical, and physical safeguards to protect your personal information from accidental, unlawful, or unauthorized destruction, loss, alteration, access, disclosure, or use and other unlawful forms of processing. You should keep your user credentials and password confidential and secure so that your information is protected.</p>\n                <p>We work hard to protect your data, but the Internet is not 100% secure. We encourage you to use caution online. This includes not sharing or reusing your passwords.</p>\n                <h3>Transfers of Information</h3>\n                <p>CoviDonate is based in Vancouver BC, which means the information we collect may be processed and stored within the province of British Columbia. We keep personal information as long as it is necessary or relevant for the practices described in this policy and as otherwise required by law.</p>\n                <h3>Third-Party Sites</h3>\n                <p>We may link to third-party sites or apps. CoviDonate may also include third-party content that collects information. We do not control these third parties. This policy does not apply to the privacy practices of these third-party websites or apps. Please read the privacy policies of other websites carefully. We are not responsible for the practices of these third-party sites or apps.</p>\n                <p>© CoviDonate 2020 • All Rights Reserved</p>\n\n            </>\n        )\n    }\n}\n\nexport default PrivacyPolicy;","// import dependenies\nimport React from 'react';\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Link,\n    useHistory\n} from 'react-router-dom';\n\n// import components\nimport HomePage     from './components/HomePage';\nimport ProjectPage  from './components/ProjectPage';\nimport LoginPage    from './components/LoginPage';\nimport AboutUsPage  from './components/AboutUsPage';\nimport DonatePage   from './components/DonatePage';\nimport MapPage      from './components/MapPage';\nimport CityPage from './components/CityPage';\nimport PrivacyPolicy from './components/PrivacyPolicy';\n\n// import bootstrap elements\nimport {\n    Navbar, Nav, NavItem, Button, Form\n} from 'react-bootstrap';\n\n// import css\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './navbar.css'\nimport './components/styles/App.css';\n\nfunction App() {\n    const history = useHistory();\n\n    const logout = () => {\n        localStorage.removeItem('_id');\n        localStorage.removeItem('name');\n        localStorage.removeItem('email');\n    \n        history.push(\"/\");\n    };\n\n\n    // Selectively render a greeting if 'name' is defined using an IIFE\n    const Greeting = (props) => {\n        const name = localStorage.getItem('name');\n        return !!name && (\n            <Navbar.Text style={{color: \"#ffffff\", marginRight: \"1em\"}}>\n                Hello, {name}! \n            </Navbar.Text>\n        );\n    }\n\n    // Ternary expression conditionally renders a\n    // logout button if there is a 'name' token in\n    // localstorage; else it renders a login button.\n    // Implemented using an IIFE\n    const LogButton = (props) => {\n        const name = localStorage.getItem('name');\n        \n        if (name)\n            return (\n                <Button variant='outline-danger' type=\"submit\" onClick={logout}>\n                    Logout\n                </Button>);\n        else\n            return (\n                <Link to=\"/login\">\n                    <Button variant='outline-success'>\n                        Login\n                    </Button>\n                </Link>);\n    };\n\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <div style={{ paddingBottom: '10px' }}>\n                    <Navbar bg=\"dark\" expand=\"lg\">\n                        <Navbar.Brand href=\"#home\">\n                            <Link to=\"/\" style={{ color: 'white', underline: 'none' }}>CoviDonate</Link>\n                        </Navbar.Brand>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav style={{marginLeft: \"2em\"}}>\n                                <Link to=\"/map\" style={{marginRight: \"1em\"}}>\n                                    <Button variant='outline-light'>\n                                        Local Projects\n                                    </Button>\n                                </Link>\n                                <Link to=\"/about-us\">\n                                    <Button variant='outline-light'>\n                                        About Us\n                                    </Button>\n                                </Link>\n                                <Link to=\"/privacy-policy\">\n                                    <Button variant='outline-light'>\n                                        Privacy Policy\n                                    </Button>\n                                </Link>\n                            </Nav>\n\n                            <Nav className='ml-auto'>\n                                <Greeting/>\n                                <Form>\n                                    <LogButton/>\n                                </Form>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </Navbar>\n                </div>\n\n                <Switch>\n                    <Route path=\"/project/:id\" component={ProjectPage}></Route>\n                    <Route path=\"/privacy-policy\" component={PrivacyPolicy}></Route>\n                    <Route path=\"/about-us\" component={AboutUsPage}></Route>\n                    <Route path=\"/donate\" component={DonatePage}></Route>\n                    <Route path=\"/map\" component={MapPage}></Route>\n                    <Route path=\"/city\" component={CityPage}></Route>\n                    <Route path=\"/login\" component={LoginPage}></Route>\n                    <Route path=\"/\" component={HomePage}></Route>\n                </Switch>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyD3wcZvoR5pytYB-LNnPb0XhBO_CMi0wBE\");\nGeocode.setLanguage(\"en\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}